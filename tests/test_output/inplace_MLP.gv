strict digraph MLP {
	graph [ordering=in size="12.0,12.0"]
	node [align=left fontname="Linux libertine" fontsize=10 height=0.2 ranksep=0.1 shape=record style=filled]
	edge [fontsize=10]
	0 [label="input-tensor&#92;ndepth:0|(1, 128)" fillcolor=lightyellow]
	1 [label="MLP&#92;ndepth:0|{input:|output:}|{(1, 128)|(1, 1)}" fillcolor=darkseagreen1]
	2 [label="Sequential&#92;ndepth:1|{input:|output:}|{(1, 128)|(1, 1)}" fillcolor=darkseagreen1]
	3 [label="Linear&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	4 [label="ReLU&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	5 [label="Linear&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	6 [label="ReLU&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	7 [label="Linear&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 1)}" fillcolor=darkseagreen1]
	8 [label="output-tensor&#92;ndepth:0|(1, 1)" fillcolor=lightyellow]
	0 -> 1
	1 -> 2
	2 -> 3
	3 -> 4
	4 -> 5
	5 -> 6
	6 -> 7
	7 -> 8
}
strict digraph MLP {
	graph [ordering=in size="12.0,12.0"]
	node [align=left fontname="Linux libertine" fontsize=10 height=0.2 ranksep=0.1 shape=record style=filled]
	edge [fontsize=10]
	0 [label="input-tensor&#92;ndepth:0|(1, 128)" fillcolor=lightyellow]
	1 [label="MLP&#92;ndepth:0|{input:|output:}|{(1, 128)|(1, 1)}" fillcolor=darkseagreen1]
	2 [label="Sequential&#92;ndepth:1|{input:|output:}|{(1, 128)|(1, 1)}" fillcolor=darkseagreen1]
	3 [label="Linear&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	4 [label="ReLU&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	5 [label="Linear&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	6 [label="ReLU&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 128)}" fillcolor=darkseagreen1]
	7 [label="Linear&#92;ndepth:2|{input:|output:}|{(1, 128)|(1, 1)}" fillcolor=darkseagreen1]
	8 [label="output-tensor&#92;ndepth:0|(1, 1)" fillcolor=lightyellow]
	0 -> 1
	1 -> 2
	2 -> 3
	3 -> 4
	4 -> 5
	5 -> 6
	6 -> 7
	7 -> 8
}
